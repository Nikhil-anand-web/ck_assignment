generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        String     @id @default(uuid())
  googleJti String?
  fullName  String
  password  String?
  picture   Json?
  role      Int
  status    Int
  email     String?    @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  category  category[]
  product   product[]
  cart      cart[]
}

model category {
  id           String @id @default(uuid())
  categoryName String
  slug         String @unique

  status Int    @default(1)
  image  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy user     @relation(fields: [userId], references: [id])

  userId  String
  product product[]
}

model product {
  id          String    @id @default(uuid())
  category    category  @relation(fields: [categoryId], references: [id], onDelete: Cascade) //
  categoryId  String
  name        String
  description String    @db.LongText
  slug        String    @unique
  thumbNail   String
  images      Json?
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   user      @relation(fields: [userId], references: [id])
  userId      String
  varient     varient[]
}

model varient {
  id        String     @id @default(uuid())
  slug      String     @unique
  weight    Decimal    @db.Decimal(10, 2)
  size      String
  qty       Int
  status    Boolean    @default(true)
  discount  Decimal    @default(0) @db.Decimal(10, 2)
  mrp       Decimal    @db.Decimal(10, 2)
  isDefault Boolean    @default(false)
  product   product    @relation(fields: [productId], references: [id])
  cartItem  cartItem[]
  productId String
}

model cart {
  id String @id @default(uuid())

  user      user     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItem cartItem[]

  referalCoins           Int    @default(0)
  refralDiscountAbsolute Float  @default(0)
  userId                 String
}

model cartItem {
  id        String   @id @default(uuid())
  cart      cart     @relation(fields: [cartId], references: [id])
  cartId    String
  varient   varient  @relation(fields: [varientId], references: [id], onDelete: Cascade)
  varientId String
  qty       Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model orders {
  id                        String   @id @default(uuid())
  orderId                   String   @unique
  customerId                String
  CustomerMeta              Json?
  varientIds                Json
  varientMeta               Json
  
  finalPrice                Float?

  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  paymentToken              Json?
 
  paymentStatus             Int      @default(0)
}